##knn인접이웃 분류 알고리즘
##3차원 데이터
data("iris3")
head(iris3)
str(iris3)
train<-rbind(iris3[1:25,,1],iris3[1:25,,2],iris3[1:25,,3])
test<-rbind(iris3[26:50,,1],iris3[26:50,,2],iris3[26:50,,3])
cl<-factor(c(rep("setosa",25),rep("versicolor",25),rep("versiginca",25)))
library(class)
iris3_model<-knn(train,test,cl,k=3,prob=TRUE)
table(cl,iris3_model,dnn = c("Actual","Predicted"))
data("iris3")
str(iris3)

iris3_model<-knn(train,test,cl,k=3,prob = TRUE)
table(iris3_model)
table(cl,iris3_model,dnn = c("Actual","Predicted"))

library(class)
data("iris")
idx<-sample(1:nrow(iris),as.integer(0.7*nrow(iris)))
trainIris<-iris[idx,]
dim(trainIris)
testIris<-iris[idx,]
dim(testIris)
iris_model<-knn(trainIris[-5],testIris[-5],trainIris$Species,k=3)
table(iris_model)
table(testIris$Species,iris_model,dnn=c("Actual","Predicted"))
str(iris)

##패키지 {caret}기반의 knn분석
library(ISLR)
library(caret)
#데이터확인
data(Smarket)
str(Smarket)
set.seed(100)
idxTrain<-createDataPartition(y=Smarket$Direction,p=0.75,list=FALSE)
train<-Smarket[idxTrain,]
test<-Smarket[-idxTrain,]
##2.전처리(중심화,척도회)
##훈련 데이터 목적변수 제외하고 중심화, 척도화 진행
trainx<-train[,1:8]
str(trainx)
# 전처리 객체 생성
preproc<-preProcess(trainx,method = c("center","scale"))
ctrl<-trainControl(method = "repeatedcv",repeats = 3)
preproc
knnFit<-train(Direction~.,data=train,method="knn",trControl=ctrl,preProcess=c("center","scale"),tuneLength=20)
knnFit
